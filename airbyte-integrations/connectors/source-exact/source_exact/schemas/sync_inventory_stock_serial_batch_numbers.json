{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "type": "object",
  "title": "Sync/Inventory/StockSerialBatchNumbers",
  "description": "The sync api's have the goal to keep the data between Exact Online and a 3rd party application the same.\r\nThe sync api's are all based on row versioning and because of that it is guaranteed to be unique. Every time an existing record is changed or a new record is inserted, the row versioning value is higher than the highest available value at that time. When retrieving records via these api's also a timestamp value is returned. The highest timestamp value of the records returned should be stored on client side. Next time records are retrieved, the timestamp value stored on client side should be provided as parameter. The api will then return only the new and changed records. Using this method is more reliable than using modified date, since it can happen that multiple records have the same modified date and therefore same record can be returned more than once. This will not happen when using timestamp.\r\nThe sync api's are also developed to give best performance when retrieving records. Because of performance and the intended purpose of the api's, only the timestamp field is allowed as parameter.\r\nThe single and bulk api\u2019s are designed for a different purpose. They provide ability to retrieve specific record or a set of records which meet certain conditions.\r\nIn case the division is moved to another database in Exact Online the timestamp values will be reset. Therefore, after a division is moved all data needs to be synchronized again in order to get the new timestamp values. To see if a division was moved, the /api/v1/{division}/system/Divisions can be used. The property DivisionMoveDate indicated at which date a division was moved and this date can be used to determine if it is needed to synchronize all data again.\r\nThe API has two important key fields, the Timestamp and the ID. The ID should be used to uniquely identify the record and will never change\r\n. The Timestamp is used to get new or changed records in an efficient way and will change for every change made to the record.\r\nThe timestamp value returned has no relation with actual date or time. As such it cannot be converted to a date\\time value. The timestamp is a rowversion value.\r\nWhen you use the sync or delete api for the first time for a particular division, filter on timestamp greater than 1.\nNote: This endpoint does not support query { $select=* } since there are a lot of properties in this endpoint.",
  "properties": {
    "Timestamp": {
      "description": "Timestamp",
      "type": "integer"
    },
    "Created": {
      "description": "Creation date",
      "type": "string",
      "format": "date-time"
    },
    "Creator": {
      "description": "User ID of creator",
      "type": "string"
    },
    "CreatorFullName": {
      "description": "Name of creator",
      "type": "string"
    },
    "Division": {
      "description": "Division code",
      "type": "integer"
    },
    "DraftStockTransactionLocation": {
      "description": "ID of draft stock transaction storage location associated with this serial or batch number.",
      "type": "string"
    },
    "DraftTransactionID": {
      "description": "ID representing a group of serial or batch numbers being reserved for use in a subsequent stock transaction",
      "type": "string"
    },
    "ID": {
      "description": "Primary Key",
      "type": "string"
    },
    "IsDraft": {
      "description": "Boolean value indicating if this serial or batch number is being reserved",
      "type": "integer"
    },
    "Item": {
      "description": "Item",
      "type": "string"
    },
    "ItemCode": {
      "description": "Item code",
      "type": "string"
    },
    "ItemDescription": {
      "description": "Description of item",
      "type": "string"
    },
    "Modified": {
      "description": "Last modified date",
      "type": "string",
      "format": "date-time"
    },
    "Modifier": {
      "description": "User ID of modifier",
      "type": "string"
    },
    "ModifierFullName": {
      "description": "Name of modifier",
      "type": "string"
    },
    "ParentID": {
      "description": "ID of the main item. Only applicable for assembled item",
      "type": "string"
    },
    "PicklistLine": {
      "description": "ID of picking list associated with this serial or batch number.",
      "type": "string"
    },
    "PickOrderLine": {
      "description": "ID of pick order associated with this serial or batch number.",
      "type": "string"
    },
    "PurchaseTransaction": {
      "description": "ID of purchase transaction associated with this serial or batch number.",
      "type": "string"
    },
    "Quantity": {
      "description": "Quantity of this serial or batch number entering or leaving inventory",
      "type": "number"
    },
    "Remarks": {
      "description": "Remarks",
      "type": "string"
    },
    "SalesReturnLine": {
      "description": "ID of sales return associated with this serial or batch number.",
      "type": "string"
    },
    "SalesTransaction": {
      "description": "ID of sales transaction associated with this serial or batch number.",
      "type": "string"
    },
    "SerialBatchNumber": {
      "description": "Serial or Batch Number ID",
      "type": "string"
    },
    "StockCountLine": {
      "description": "ID of stock count entry",
      "type": "string"
    },
    "StockTransactionID": {
      "description": "ID of the stock transaction in which this serial or batch number was used",
      "type": "string"
    },
    "StockTransactionLocation": {
      "description": "ID of stock transaction location associated with this serial or batch number.",
      "type": "string"
    },
    "StockTransactionType": {
      "description": "Type of stock transaction associated with this serial or batch number. Available values: 10 = Opening balance 120 = Goods delivery 121 = Sales return 122 = Stock out (Drop shipment) 123 = Stock in (Drop shipment return) 124 = Warehouse transfer delivery 125 = Location Transfer Delivery 130 = Goods receipt 131 = Purchase return 132 = Stock in (Drop shipment) 133 = Stock out (Drop shipment return) 134 = Warehouse transfer receipt 135 = Location Transfer Receipt 140 = Shop order stock receipt 141 = Shop order stock reversal 147 = Shop order by-product receipt 148 = Shop order by-product reversal 150 = Requirement issue 151 = Requirement reversal 155 = Subcontract issue 156 = Subcontract return 160 = Receipt (Assembly) 161 = Return receipt (Disassembly) 165 = Issue (Assembly) 166 = Return issue (Disassembly) 180 = Stock revaluation 181 = Financial revaluation 195 = Stock count 196 = Adjust stock - out 197 = Adjust stock - in 200 = Trade-in",
      "type": "integer"
    },
    "StorageLocation": {
      "description": "Storage location which this serial or batch number is entering or leaving",
      "type": "string"
    },
    "StorageLocationCode": {
      "description": "Code of the storage location which this serial or batch number is entering or leaving",
      "type": "string"
    },
    "StorageLocationDescription": {
      "description": "Description of the storage location which this serial or batch number is entering or leaving",
      "type": "string"
    },
    "Warehouse": {
      "description": "Warehouse which this serial or batch number is entering or leaving",
      "type": "string"
    },
    "WarehouseCode": {
      "description": "Code of the warehouse which this serial or batch number is entering or leaving",
      "type": "string"
    },
    "WarehouseDescription": {
      "description": "Description of the warehouse which this serial or batch number is entering or leaving",
      "type": "string"
    },
    "WarehouseTransferLine": {
      "description": "ID of warehouse transfer associated with this serial or batch number.",
      "type": "string"
    }
  }
}