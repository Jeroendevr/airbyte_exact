{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "type": "object",
  "title": "Sync/Project/TimeCostTransactions",
  "description": "The TimeCostTransactions sync api returns both time and cost transactions. To filter out time or cost transactions you need to filter only on property Type. The API does not allow to filter on these fields. Filtering need to be done after receiving the records.\r\nThe sync api's have the goal to keep the data between Exact Online and a 3rd party application the same.\r\nThe sync api's are all based on row versioning and because of that it is guaranteed to be unique. Every time an existing record is changed or a new record is inserted, the row versioning value is higher than the highest available value at that time. When retrieving records via these api's also a timestamp value is returned. The highest timestamp value of the records returned should be stored on client side. Next time records are retrieved, the timestamp value stored on client side should be provided as parameter. The api will then return only the new and changed records. Using this method is more reliable than using modified date, since it can happen that multiple records have the same modified date and therefore same record can be returned more than once. This will not happen when using timestamp.\r\nThe sync api's are also developed to give best performance when retrieving records. Because of performance and the intended purpose of the api's, only the timestamp field is allowed as parameter.\r\nThe single and bulk api\u2019s are designed for a different purpose. They provide ability to retrieve specific record or a set of records which meet certain conditions.\r\nIn case the division is moved to another database in Exact Online the timestamp values will be reset. Therefore, after a division is moved all data needs to be synchronized again in order to get the new timestamp values. To see if a division was moved, the /api/v1/{division}/system/Divisions can be used. The property DivisionMoveDate indicated at which date a division was moved and this date can be used to determine if it is needed to synchronize all data again.\r\nThe API has two important key fields, the Timestamp and the ID. The ID should be used to uniquely identify the record and will never change\r\n. The Timestamp is used to get new or changed records in an efficient way and will change for every change made to the record.\r\nThe timestamp value returned has no relation with actual date or time. As such it cannot be converted to a date\\time value. The timestamp is a rowversion value.\r\nWhen you use the sync or delete api for the first time for a particular division, filter on timestamp greater than 1.",
  "properties": {
    "Timestamp": {
      "description": "Timestamp",
      "type": "integer"
    },
    "Account": {
      "description": "Guid ID of account that is linked to the project",
      "type": "string"
    },
    "AccountName": {
      "description": "Name of account that is linked to the project",
      "type": "string"
    },
    "AmountFC": {
      "description": "Calculated amount of the transaction based on (Quantity * PriceFC)",
      "type": "number"
    },
    "Attachment": {
      "description": "Attachment linked to the transaction (not mandatory)",
      "type": "string"
    },
    "Created": {
      "description": "Date and time the transaction was created",
      "type": "string",
      "format": "date-time"
    },
    "Creator": {
      "description": "The Guid ID of user that created the transaction",
      "type": "string"
    },
    "CreatorFullName": {
      "description": "The full name of the user that created the record",
      "type": "string"
    },
    "Currency": {
      "description": "Currency of amount FC",
      "type": "string"
    },
    "CustomField": {
      "description": "Custom field endpoint. Provided only for the Exact Online Premium users.",
      "type": "string"
    },
    "Date": {
      "description": "Date and time the transaction was done",
      "type": "string",
      "format": "date-time"
    },
    "Division": {
      "description": "Division code",
      "type": "integer"
    },
    "DivisionDescription": {
      "description": "Description of Division",
      "type": "string"
    },
    "Employee": {
      "description": "Guid ID of the employee that is linked to the transaction",
      "type": "string"
    },
    "EndTime": {
      "description": "End time of the time transaction",
      "type": "string",
      "format": "date-time"
    },
    "EntryNumber": {
      "description": "Number that represents the grouping of transactions",
      "type": "integer"
    },
    "ErrorText": {
      "description": "(Only used by backgroundjobs) To determine which transaction has an error",
      "type": "string"
    },
    "HourStatus": {
      "description": "Status of the transaction: 1 = Draft, 2 = Rejected, 10 = Submitted, 11 = Failed on approval, 14 = Processing, 16 = Processing, 19 = Failed while undoing approval, 20 = Final",
      "type": "integer"
    },
    "ID": {
      "description": "Primary key",
      "type": "string"
    },
    "Item": {
      "description": "Item that is linked to the transaction, which provides the time or cost information",
      "type": "string"
    },
    "ItemDescription": {
      "description": "Description of the item that is linked to the transaction",
      "type": "string"
    },
    "ItemDivisable": {
      "description": "Indicates if fractional quantities of the item can be used, for example quantity = 0.4",
      "type": "boolean"
    },
    "Modified": {
      "description": "The date and time transaction record was modified",
      "type": "string",
      "format": "date-time"
    },
    "Modifier": {
      "description": "The Guid ID of the user that modified the records",
      "type": "string"
    },
    "ModifierFullName": {
      "description": "The full name of the user that modified the record",
      "type": "string"
    },
    "Notes": {
      "description": "Notes linked to the transaction for providing additional information (not mandatory)",
      "type": "string"
    },
    "PriceFC": {
      "description": "For use in AmountFC (Quantiy * Price FC)",
      "type": "number"
    },
    "Project": {
      "description": "Guid ID of project that is linked to the transaction",
      "type": "string"
    },
    "ProjectAccount": {
      "description": "Project account ID that is linked to the transaction (not mandatory)",
      "type": "string"
    },
    "ProjectAccountCode": {
      "description": "Project account code that is linked to the transaction",
      "type": "string"
    },
    "ProjectAccountName": {
      "description": "Project account name that is linked to the transaction",
      "type": "string"
    },
    "ProjectCode": {
      "description": "Project code that is linked to the transaction",
      "type": "string"
    },
    "ProjectDescription": {
      "description": "Project description that is linked to the transaction",
      "type": "string"
    },
    "Quantity": {
      "description": "Quantity of the item that is linked to the transaction",
      "type": "number"
    },
    "StartTime": {
      "description": "Start time of the time transaction",
      "type": "string",
      "format": "date-time"
    },
    "Subscription": {
      "description": "Guid ID of subscription that is linked to the transaction",
      "type": "string"
    },
    "SubscriptionAccount": {
      "description": "Subscription account ID that is linked to the transaction, this is to identify the referenced subscription",
      "type": "string"
    },
    "SubscriptionAccountCode": {
      "description": "Subscription account code that is linked to the transaction",
      "type": "string"
    },
    "SubscriptionAccountName": {
      "description": "Subscription account name that is linked to the transaction",
      "type": "string"
    },
    "SubscriptionDescription": {
      "description": "Subscription description that is linked to the transaction",
      "type": "string"
    },
    "SubscriptionNumber": {
      "description": "Subscription number that is linked to the transaction",
      "type": "integer"
    },
    "Type": {
      "description": "The type of transaction. E.g: 1 = Time, 2 = Cost",
      "type": "integer"
    },
    "WBS": {
      "description": "Guid ID of activity for time transaction or expense for cost transaction that is linked to project WBS (work breakdown structure)",
      "type": "string"
    },
    "WBSDescription": {
      "description": "Name of activity for time transaction or expense for cost transaction that is linked to project WBS (work breakdown structure)",
      "type": "string"
    }
  }
}