{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "type": "object",
  "title": "Sync/Cashflow/PaymentTerms",
  "description": "The PaymentTerms sync api returns both payments and receipts. To filter out payments you need to filter on property ApprovalStatus and LineType. Approval for payments is a feature which only turned on in some subscriptions. By default this feature is off and in that case the ApprovalStatus will be null. To filter out receipts  you need to filter only on LineType. The API does not allow to filter on these fields. Filtering need to be done after receiving the records.\r\nThe sync api's have the goal to keep the data between Exact Online and a 3rd party application the same.\r\nThe sync api's are all based on row versioning and because of that it is guaranteed to be unique. Every time an existing record is changed or a new record is inserted, the row versioning value is higher than the highest available value at that time. When retrieving records via these api's also a timestamp value is returned. The highest timestamp value of the records returned should be stored on client side. Next time records are retrieved, the timestamp value stored on client side should be provided as parameter. The api will then return only the new and changed records. Using this method is more reliable than using modified date, since it can happen that multiple records have the same modified date and therefore same record can be returned more than once. This will not happen when using timestamp.\r\nThe sync api's are also developed to give best performance when retrieving records. Because of performance and the intended purpose of the api's, only the timestamp field is allowed as parameter.\r\nThe single and bulk api\u2019s are designed for a different purpose. They provide ability to retrieve specific record or a set of records which meet certain conditions.\r\nIn case the division is moved to another database in Exact Online the timestamp values will be reset. Therefore, after a division is moved all data needs to be synchronized again in order to get the new timestamp values. To see if a division was moved, the /api/v1/{division}/system/Divisions can be used. The property DivisionMoveDate indicated at which date a division was moved and this date can be used to determine if it is needed to synchronize all data again.\r\nThe API has two important key fields, the Timestamp and the ID. The ID should be used to uniquely identify the record and will never change\r\n. The Timestamp is used to get new or changed records in an efficient way and will change for every change made to the record.\r\nThe timestamp value returned has no relation with actual date or time. As such it cannot be converted to a date\\time value. The timestamp is a rowversion value.\r\nWhen you use the sync or delete api for the first time for a particular division, filter on timestamp greater than 1.",
  "properties": {
    "Timestamp": {
      "description": "Timestamp",
      "type": "integer"
    },
    "Account": {
      "description": "The supplier to which the payment has to be done.",
      "type": "string"
    },
    "AccountBankAccountID": {
      "description": "The bank account of the supplier, to which the payment has to be done.",
      "type": "string"
    },
    "AccountBankAccountNumber": {
      "description": "The bank account number of the supplier, to which the payment has to be done.",
      "type": "string"
    },
    "AccountCode": {
      "description": "The code of the supplier to which the payment has to be done.",
      "type": "string"
    },
    "AccountContact": {
      "description": "Contact person copied from the purchase invoice linked to the related purchase entry. Used as prefered contact when sending reminders.",
      "type": "string"
    },
    "AccountContactName": {
      "description": "Name of the contact person of the supplier.",
      "type": "string"
    },
    "AccountCountry": {
      "description": "Country code of the customer.",
      "type": "string"
    },
    "AccountName": {
      "description": "Name of the supplier.",
      "type": "string"
    },
    "AmountDC": {
      "description": "The amount in default currency (division currency). Payments are matched on this amount.",
      "type": "number"
    },
    "AmountDiscountDC": {
      "description": "The amount of the discount in the default currency.",
      "type": "number"
    },
    "AmountDiscountFC": {
      "description": "The amount of the discount. This is in the amount of the selected currency.",
      "type": "number"
    },
    "AmountFC": {
      "description": "The amount of the payment. This is in the amount of the selected currency.",
      "type": "number"
    },
    "ApprovalStatus": {
      "description": "Shows the approval status of the payment. Values can be 1 N/A, 2 Awaiting review, 3 Awaiting approval, 4 Approved, 5 Rejected. Approval of payments is not enabled in all subscriptions. If turned of the ApprovalStatus is null",
      "type": "integer"
    },
    "BankAccountID": {
      "description": "Own bank account from which the payment must be done.",
      "type": "string"
    },
    "BankAccountNumber": {
      "description": "Own bank account number from which the payment must be done.",
      "type": "string"
    },
    "CashflowTransactionBatchCode": {
      "description": "When processing payments, all payments with the same processing data are put in a batch. This field contains the code of that batch.",
      "type": "string"
    },
    "Created": {
      "description": "Creation date.",
      "type": "string",
      "format": "date-time"
    },
    "Creator": {
      "description": "User ID of the creator.",
      "type": "string"
    },
    "CreatorFullName": {
      "description": "Name of the creator.",
      "type": "string"
    },
    "Currency": {
      "description": "The currency of the payment. This currency can only deviate from the division currency if the module Currency is in the license.",
      "type": "string"
    },
    "Description": {
      "description": "Extra description for the payment that may be included in the bank export file.",
      "type": "string"
    },
    "DirectDebitMandate": {
      "description": "Direct Debit Mandate used to collect the PaymentTerms.",
      "type": "string"
    },
    "DirectDebitMandateDescription": {
      "description": "Description of the mandate.",
      "type": "string"
    },
    "DirectDebitMandatePaymentType": {
      "description": "Payment type of the mandate.  0 = One off payment  1 = Recurrent payment.",
      "type": "integer"
    },
    "DirectDebitMandateReference": {
      "description": "Unique mandate reference.",
      "type": "string"
    },
    "DirectDebitMandateType": {
      "description": "Type of the mandate.  0 = Core  1 = Business-to-business.",
      "type": "integer"
    },
    "DiscountDueDate": {
      "description": "Date before which the payment must be done to be eligible for discount.",
      "type": "string",
      "format": "date-time"
    },
    "Division": {
      "description": "Division code.",
      "type": "integer"
    },
    "Document": {
      "description": "Document that is created when processing payments. The bank export file is attached to the document.",
      "type": "string"
    },
    "DocumentNumber": {
      "description": "Number of the document.",
      "type": "integer"
    },
    "DocumentSubject": {
      "description": "Subject of the document.",
      "type": "string"
    },
    "DueDate": {
      "description": "Date before which the payment must be done.",
      "type": "string",
      "format": "date-time"
    },
    "EndDate": {
      "description": "Date since when the payment is no longer an outstanding item. This is the highest invoice date of all matched payments.",
      "type": "string",
      "format": "date-time"
    },
    "EndPeriod": {
      "description": "Period since when the payment is no longer an outstanding item. This is the highest period of all matched payments.",
      "type": "integer"
    },
    "EndToEndID": {
      "description": "The value of the tag 'EndToEndID' when generating a SEPA file.",
      "type": "string"
    },
    "EndYear": {
      "description": "Year (of period) since when the payment is no longer an outstanding item. This is the highest year of all matched payments. Used in combination with EndPeriod.",
      "type": "integer"
    },
    "EntryDate": {
      "description": "Processing date of the payment.",
      "type": "string",
      "format": "date-time"
    },
    "EntryID": {
      "description": "The unique identifier for a set of payments. A payment can be split so that one part is paid on a different date. In that case the two records get a different EntryID.",
      "type": "string"
    },
    "EntryNumber": {
      "description": "Entry number of the linked transaction.",
      "type": "integer"
    },
    "GLAccount": {
      "description": "G/L account of the payment. Must be of type 22 (Accounts payable).",
      "type": "string"
    },
    "GLAccountCode": {
      "description": "Code of the G/L account.",
      "type": "string"
    },
    "GLAccountDescription": {
      "description": "Description of the G/L account.",
      "type": "string"
    },
    "ID": {
      "description": "Identifier of the PaymentTerms.",
      "type": "string"
    },
    "InvoiceDate": {
      "description": "Invoice date of the linked transaction.",
      "type": "string",
      "format": "date-time"
    },
    "InvoiceNumber": {
      "description": "Invoice number of the linked transaction.",
      "type": "integer"
    },
    "IsBatchBooking": {
      "description": "Boolean indicating whether the payment is part of a batch booking.",
      "type": "integer"
    },
    "IsFullyPaid": {
      "description": "Boolean indicating whether the receivable was fully paid by the customer.",
      "type": "boolean"
    },
    "Journal": {
      "description": "Journal of the linked transaction.",
      "type": "string"
    },
    "JournalDescription": {
      "description": "Description of the journal.",
      "type": "string"
    },
    "LastPaymentDate": {
      "description": "Last payment date.",
      "type": "string",
      "format": "date-time"
    },
    "LineType": {
      "description": "Determines if the record is a payment or receipt. In case of payment the value is 22, in case of receipt the value is 20",
      "type": "integer"
    },
    "Modified": {
      "description": "Last modified date.",
      "type": "string",
      "format": "date-time"
    },
    "Modifier": {
      "description": "User ID of modifier.",
      "type": "string"
    },
    "ModifierFullName": {
      "description": "Name of modifier.",
      "type": "string"
    },
    "OrderNumber": {
      "description": "Order number of the linked transaction.",
      "type": "integer"
    },
    "PaymentBatchNumber": {
      "description": "Number assigned during the of processing payments. When payments are processed a bank export file is created. This file contains one or more batches that contain one or more payments. Each batch gets a sequence number that is stored for each payment in that batch.",
      "type": "integer"
    },
    "PaymentCondition": {
      "description": "Payment condition of the linked transaction.",
      "type": "string"
    },
    "PaymentConditionDescription": {
      "description": "Description of the payment condition.",
      "type": "string"
    },
    "PaymentDays": {
      "description": "Number of days between invoice date and due date.",
      "type": "integer"
    },
    "PaymentDaysDiscount": {
      "description": "Number of days between invoice date and due date of the discount.",
      "type": "integer"
    },
    "PaymentDiscountPercentage": {
      "description": "Payment discount percentage.",
      "type": "number"
    },
    "PaymentInformationID": {
      "description": "PaymentInformationID tag from the SEPA xml file.",
      "type": "string"
    },
    "PaymentMethod": {
      "description": "Method of payment.  B = On credit (default)  I = Collection  K = Cash  V = Credit card.",
      "type": "string"
    },
    "PaymentReference": {
      "description": "Payment reference for the payment that may be included in the bank export file.",
      "type": "string"
    },
    "PaymentSelected": {
      "description": "Date and time since when the payment is selected to be paid.",
      "type": "string",
      "format": "date-time"
    },
    "PaymentSelector": {
      "description": "User who selected the payment to be paid.",
      "type": "string"
    },
    "PaymentSelectorFullName": {
      "description": "Name of the payment selector.",
      "type": "string"
    },
    "RateFC": {
      "description": "Exchange rate from payment currency to division currency. AmountFC * RateFC = AmountDC.",
      "type": "number"
    },
    "ReceivableBatchNumber": {
      "description": "Number assigned during the processing of receivables.",
      "type": "integer"
    },
    "ReceivableSelected": {
      "description": "Date and time since when the receivable is selected to be collected.",
      "type": "string",
      "format": "date-time"
    },
    "ReceivableSelector": {
      "description": "User who selected the receivable to be collected.",
      "type": "string"
    },
    "ReceivableSelectorFullName": {
      "description": "Name of the receivable selector.",
      "type": "string"
    },
    "Source": {
      "description": "The source of the payment.",
      "type": "integer"
    },
    "Status": {
      "description": "The status of the payment.  20 = open  30 = selected - payment is selected to be paid  40 = processed - payment has been done  50 = matched - payment is matched with one or more other outstanding items or financial statement lines",
      "type": "integer"
    },
    "TransactionAmountDC": {
      "description": "Total amount of the linked transaction in default currency (division currency).",
      "type": "number"
    },
    "TransactionAmountFC": {
      "description": "Total amount of the linked transaction in the selected currency.",
      "type": "number"
    },
    "TransactionDueDate": {
      "description": "Due date of the linked transaction.",
      "type": "string",
      "format": "date-time"
    },
    "TransactionEntryID": {
      "description": "Linked transaction. Use this as reference to PurchaseEntries.",
      "type": "string"
    },
    "TransactionID": {
      "description": "Linked transaction line. Use this as reference to PurchaseEntryLines.",
      "type": "string"
    },
    "TransactionIsReversal": {
      "description": "Indicates if the linked transaction is a reversal entry.",
      "type": "boolean"
    },
    "TransactionReportingPeriod": {
      "description": "Period of the linked transaction.",
      "type": "integer"
    },
    "TransactionReportingYear": {
      "description": "Year of the linked transaction.",
      "type": "integer"
    },
    "TransactionStatus": {
      "description": "Status of the linked transaction.",
      "type": "integer"
    },
    "TransactionType": {
      "description": "Type of the linked transaction.",
      "type": "integer"
    },
    "YourRef": {
      "description": "Invoice number of the supplier. In case the payment belongs to a bank entry line and is matched with one invoice, YourRef is filled with the YourRef of this invoice.",
      "type": "string"
    }
  }
}